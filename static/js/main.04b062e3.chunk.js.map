{"version":3,"sources":["firebase/firebase.js","components/AddContact.js","components/Contact.js","components/Contacts.js","components/NavBar.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","initialState","email","firstName","lastName","phoneNUmber","editMode","AddContact","user","useState","openAddContact","setOpenAddContact","contactDetails","setContactDetails","e","a","preventDefault","setDoc","doc","setTimeout","onSubmit","className","onClick","prev","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","required","value","name","autoComplete","onChange","target","type","placeholder","Contact","contact","setContacts","phoneNumber","newData","setNewData","inputRef","useRef","deleteDoc","map","contactToEdit","current","focus","deleteEntry","ref","Contacts","contacts","useEffect","q","collection","onSnapshot","snapshot","docChanges","forEach","change","data","filter","style","gridTemplateColumns","NavBar","displayName","signOut","getAuth","Home","App","setUser","onAuthStateChanged","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04b062e3.chunk.js","sourcesContent":["import { getFirestore } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC-_nHZGUMOyMLwSwZIBKypP5lGxSFDYwk\",\n  authDomain: \"react-android-6523e.firebaseapp.com\",\n  databaseURL:\n    \"https://react-android-6523e-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"react-android-6523e\",\n  storageBucket: \"react-android-6523e.appspot.com\",\n  messagingSenderId: \"269425320012\",\n  appId: \"1:269425320012:web:921737c61e8abd190854e9\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport { app, db };\n","import { doc, setDoc } from \"@firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { db } from \"../firebase/firebase\";\nconst initialState = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  phoneNUmber: \"\",\n  editMode: false,\n};\n\nexport default function AddContact({ user }) {\n  const [openAddContact, setOpenAddContact] = useState(false);\n  const [contactDetails, setContactDetails] = useState(initialState);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    user?.email &&\n      (await setDoc(doc(db, user.email, contactDetails.email), contactDetails));\n    setTimeout(() => {\n      setContactDetails(initialState);\n    }, 0);\n  }\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={`flex flex-col max-w-screen-lg mx-auto pt-2 px-2 top-0 ${\n        openAddContact && \"border rounded-md p-2 shadow-sm pb-4 mb-14\"\n      } `}\n    >\n      {/* <h1 className=\"pl-1 mb-2 text-xl\">Add new contact</h1> */}\n      <svg\n        onClick={() => setOpenAddContact((prev) => !prev)}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className={`transform duration-300 text-gray-500 mb-2 ${\n          openAddContact ? \"rotate-45 text-red-500 w-6 h-6\" : \"w-10 h-10\"\n        } cursor-pointer`}\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n        />\n      </svg>\n      {openAddContact && (\n        <div className=\"flex flex-col space-y-3 overflow-hidden\">\n          <div className=\"flex space-x-2\">\n            <input\n              required\n              className=\"w-full px-2 py-1 border rounded-md\"\n              value={contactDetails.firstName}\n              name=\"firstName\"\n              autoComplete=\"off\"\n              onChange={(e) =>\n                setContactDetails({\n                  ...contactDetails,\n                  [e.target.name]: e.target.value,\n                })\n              }\n              type=\"text\"\n              placeholder=\"First name\"\n            />\n            <input\n              required\n              className=\"w-full px-2 py-1 border rounded-md\"\n              value={contactDetails.lastName}\n              name=\"lastName\"\n              autoComplete=\"off\"\n              onChange={(e) =>\n                setContactDetails({\n                  ...contactDetails,\n                  [e.target.name]: e.target.value,\n                })\n              }\n              type=\"text\"\n              placeholder=\"Last name\"\n            />\n          </div>\n          <div className=\"flex space-x-2\">\n            <input\n              required\n              value={contactDetails.email}\n              name=\"email\"\n              onChange={(e) =>\n                setContactDetails({\n                  ...contactDetails,\n                  [e.target.name]: e.target.value,\n                })\n              }\n              className=\"w-full px-2 py-1 border rounded-md\"\n              type=\"text\"\n              placeholder=\"Email\"\n            />\n            <input\n              value={contactDetails.phoneNUmber}\n              name=\"phoneNUmber\"\n              onChange={(e) =>\n                setContactDetails({\n                  ...contactDetails,\n                  [e.target.name]: e.target.value,\n                })\n              }\n              className=\"w-full px-2 py-1 border rounded-md\"\n              type=\"number\"\n              placeholder=\"Phone\"\n            />\n          </div>\n          <button className=\"py-1 text-white bg-blue-500 rounded-md\">\n            ADD\n          </button>\n        </div>\n      )}\n    </form>\n  );\n}\n","import { deleteDoc, doc, setDoc } from \"@firebase/firestore\";\nimport React, { useRef, useState } from \"react\";\nimport { db } from \"../firebase/firebase\";\n\nexport default function Contact({ contact, setContacts, user }) {\n  const [newData, setNewData] = useState({\n    name: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n  });\n  const inputRef = useRef();\n\n  function edit(contactToEdit) {\n    setNewData(contactToEdit);\n    setContacts((prev) =>\n      prev.map((contact) =>\n        contact.email === contactToEdit.email\n          ? { ...contact, editMode: true }\n          : { ...contact, editMode: false }\n      )\n    );\n    setTimeout(() => {\n      inputRef.current.focus();\n    }, 0);\n  }\n\n  async function deleteEntry(email) {\n    await deleteDoc(doc(db, user.email, email));\n  }\n\n  async function finishEdits() {\n    await setDoc(doc(db, user.email, newData.email), newData);\n\n    setContacts((prev) => {\n      return prev.map((contact) =>\n        contact.email === newData.email ? newData : contact\n      );\n    });\n\n    setContacts((prev) =>\n      prev.map((contact) => ({ ...contact, editMode: false }))\n    );\n  }\n  return (\n    <div className=\"relative flex flex-col p-3 m-2 space-y-1 duration-100 border rounded-md shadow-sm hover:shadow-md group\">\n      <div className=\"absolute flex space-x-2 duration-100 opacity-0 right-1 top-2 group-hover:opacity-100\">\n        {!contact.editMode ? (\n          <div\n            onClick={() => edit(contact)}\n            className=\"cursor-pointer EDIT_BUTTON\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n              />\n            </svg>\n          </div>\n        ) : (\n          <div\n            onClick={finishEdits}\n            className=\"cursor-pointer FINISH_EDITING_BUTTON\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          </div>\n        )}\n        <div\n          className=\"text-red-500 cursor-pointer\"\n          onClick={() => deleteEntry(contact.email)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"w-6 h-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </div>\n      </div>\n      <div>\n        <div>\n          Name:&nbsp;\n          {contact.editMode ? (\n            <input\n              ref={inputRef}\n              className=\"inline-block px-2 text-lg font-bold bg-transparent rounded-sm bg-yellow-50\"\n              value={newData.name}\n              name=\"name\"\n              onChange={(e) =>\n                setNewData({\n                  ...newData,\n                  name: e.target.value,\n                })\n              }\n            ></input>\n          ) : (\n            <span className=\"px-2 text-lg font-bold bg-transparent\">\n              {contact.name}\n            </span>\n          )}\n        </div>\n        <div className=\"break-words\">\n          Email:&nbsp;\n          <span className=\"text-blue-500 underline cursor-pointer\">\n            {contact.email}\n          </span>\n        </div>\n        <div>Phone number: {contact.phoneNumber}</div>\n      </div>\n    </div>\n  );\n}\n","import { collection, onSnapshot } from \"@firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/firebase\";\nimport Contact from \"./Contact\";\n\nexport default function Contacts({ user }) {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    if (user?.email) {\n      const q = collection(db, user?.email);\n      onSnapshot(q, (snapshot) => {\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            //   console.log(\"New contact: \", change.doc.data());\n            setContacts((prev) => [...prev, change.doc.data()]);\n          }\n\n          if (change.type === \"removed\") {\n            //   console.log(\"Removed contact: \", change.doc.data());\n            setContacts((prev) =>\n              prev.filter(\n                (contact) => contact?.email !== change.doc.data().email\n              )\n            );\n          }\n        });\n      });\n    }\n  }, [user?.email]);\n\n  return (\n    <div className=\"-mt-12\">\n      <h1 className=\"my-3 text-xl font-bold text-center text-blue-500\">\n        Contacts\n      </h1>\n      <div\n        style={{ gridTemplateColumns: \"repeat(auto-fill, minmax(350px, 1fr))\" }}\n        className=\"grid max-w-screen-lg mx-auto\"\n      >\n        {contacts?.map((contact) => {\n          return (\n            <div key={contact.email}>\n              <Contact\n                user={user}\n                contact={contact}\n                setContacts={setContacts}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { signOut, getAuth } from \"firebase/auth\";\n\nexport default function NavBar({ user }) {\n  function handleClick() {\n    signOut(getAuth());\n  }\n  return (\n    <nav className=\"w-full py-2 mb-6 duration-100 bg-blue-600 shadow-md\">\n      <div className=\"flex justify-between max-w-screen-lg px-10 mx-auto text-white \">\n        <h1 className=\"text-xl font-bold shadow-sm\">\n          {user?.displayName}'s Contacts\n        </h1>\n        <button\n          onClick={handleClick}\n          className=\"px-2 transform border-2 border-white rounded-sm cursor-pointer active:scale-90\"\n        >\n          Logout\n        </button>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport AddContact from \"../components/AddContact\";\nimport Contacts from \"../components/Contacts\";\nimport NavBar from \"../components/NavBar\";\n\nexport default function Home({ user }) {\n  return (\n    <div className=\"overflow-hidden\">\n      <NavBar user={user} />\n      <div className=\"mx-4\">\n        <AddContact user={user} />\n        <Contacts user={user} />\n      </div>\n    </div>\n  );\n}\n","// import { useState } from \"react\";\n// import Login from \"./components/Login\";\n// import Signup from \"./components/Signup\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { getAuth, onAuthStateChanged } from \"@firebase/auth\";\nimport { useState } from \"react\";\nimport {} from \"./firebase/firebase\";\n// import { Redirect } from \"react-router\";\n// import { AnimateSharedLayout } from \"framer-motion\";\n\nfunction App() {\n  const [user, setUser] = useState();\n\n  onAuthStateChanged(getAuth(), (user) => {\n    console.log(`user`, user);\n    setUser(user);\n  });\n  return <Home user={user} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}